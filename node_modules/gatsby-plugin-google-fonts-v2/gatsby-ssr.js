"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importDefault(require("react"));
var constants_1 = require("./constants");
var utils_1 = require("./utils");
var functions_1 = require("./functions");
/* istanbul ignore next */
exports.onRenderBody = function (_a, options) {
    var setHeadComponents = _a.setHeadComponents;
    // if legacy mode was used and variable font request was found
    // exit immediately
    if (!functions_1.checkNoLegacyVariableConflict(options)) {
        utils_1.log(constants_1.ERRORS.VARIABLE_LEGACY_CONFLICT);
        return;
    }
    var link;
    if (!options.legacy) {
        var finalFonts = functions_1.filterFonts(options);
        if (finalFonts.errors.length > 0 && options.verbose) {
            utils_1.log('The following fonts/weights were not loaded');
            utils_1.log(finalFonts.errors);
        }
        var fonts = functions_1.assembleFontsLink(finalFonts.accepted);
        link = constants_1.BASE_URL + "?" + fonts + functions_1.setDisplay(options);
    }
    setHeadComponents([
        react_1.default.createElement('link', {
            key: 'fonts',
            href: link,
            rel: 'stylesheet'
        })
    ]);
};
//# sourceMappingURL=gatsby-ssr.js.map